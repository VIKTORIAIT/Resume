(this["webpackJsonpgoit-react-hw-01-components"]=this["webpackJsonpgoit-react-hw-01-components"]||[]).push([[0],{14:function(e,t,n){},16:function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),c=n(6),i=n.n(c),o=(n(14),n(8)),s=n(2),u=n(7),l=n.n(u),d=n(0);function m(e){var t=e.onSubmit,n=Object(a.useState)(""),r=Object(s.a)(n,2),c=r[0],i=r[1],o=Object(a.useState)(null),u=Object(s.a)(o,2),m=u[0],b=u[1];return Object(d.jsxs)("form",{onSubmit:function(e){t(e,c,m)},className:l.a.formStyle,children:[Object(d.jsx)("p",{children:"Name"}),Object(d.jsx)("input",{onChange:function(e){i(e.target.value)},type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0}),Object(d.jsx)("p",{children:"Phone"}),Object(d.jsx)("input",{onChange:function(e){b(e.target.value)},type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0}),Object(d.jsx)("button",{type:"submit",children:"Add Contact"})]})}var b=function(e){var t=e.filter,n=e.onClick;return Object(d.jsx)("ul",{children:t.map((function(e){return Object(d.jsxs)("li",{children:[e.name+":"+e.number," ",Object(d.jsx)("button",{onClick:n,id:e.id,type:"button",children:"Delete"})]},e.id)}))})},j=function(e){var t=e.onChange;return Object(d.jsxs)("div",{children:[Object(d.jsx)("p",{children:"Find Contacts by Name"}),Object(d.jsx)("input",{onChange:t,type:"text",name:"filter",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan"})]})},h=n(9),p="contacts",f=[{id:"id-1",name:"Rosie Simpson",number:"459-12-56"},{id:"id-2",name:"Hermione Kline",number:"443-89-12"},{id:"id-3",name:"Eden Clements",number:"645-17-79"},{id:"id-4",name:"Annie Copeland",number:"227-91-26"}];function O(){var e=Object(a.useState)(function(e){try{return JSON.parse(localStorage.getItem(e))}catch(t){return null}}(p)||f),t=Object(s.a)(e,2),n=t[0],r=t[1],c=Object(a.useState)(""),i=Object(s.a)(c,2),u=i[0],l=i[1];Object(a.useEffect)((function(){!function(e,t){try{localStorage.setItem(e,JSON.stringify(t))}catch(n){return null}}(p,n.length?n:null)}),[n]);return Object(d.jsxs)("div",{className:"container",children:[Object(d.jsx)("h1",{children:"Phonebook"}),Object(d.jsx)(m,{onSubmit:function(e,t,a){e.preventDefault(),n.some((function(e){return e.name===t}))?alert("This name already exist in your contacts!"):r((function(e){return[].concat(Object(o.a)(e),[{name:t,number:a,id:Object(h.a)()}])}))}}),Object(d.jsx)("h2",{children:"Contacts"}),Object(d.jsx)(j,{onChange:function(e){l(e.target.value)}}),Object(d.jsx)(b,{filter:n.filter((function(e){return e.name.toLowerCase().includes(u.toLowerCase())})),onClick:function(e){r(n.filter((function(t){return t.id!==e.target.id})))}})]})}i.a.render(Object(d.jsx)(r.a.StrictMode,{children:Object(d.jsx)(O,{})}),document.getElementById("root"))},7:function(e,t,n){e.exports={formStyle:"ContactForm_formStyle__2BGHu"}}},[[16,1,2]]]);
//# sourceMappingURL=main.8ffc1ef0.chunk.js.map