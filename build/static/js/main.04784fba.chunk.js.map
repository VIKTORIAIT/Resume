{"version":3,"sources":["component/ContactForm/ContactForm.module.css","redux/constantsType.js","redux/appActions.js","component/ContactForm/ContactForm.jsx","component/ContactsList/ContactsList.jsx","component/Filter/Filter.jsx","App.jsx","redux/appReducer.js","redux/store.js","index.js"],"names":["module","exports","SET_CONTACTS","SET_FILTER","ADD_CONTACT","DELETE_CONTACT","setFilter","value","type","connect","addContact","name","number","useState","setName","setNumber","onSubmit","e","preventDefault","className","s","formStyle","onChange","target","pattern","title","required","contacts","filter","deleteContact","id","contactsList","item","toLowerCase","includes","map","el","onClick","event","setContacts","LOCAL_CONTACTS","load","states","namespace","length","combineReducers","state","isIncluded","some","alert","nanoid","store","createStore","appReducer","composeWithDevTools","applyMiddleware","thunk","save","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04784fba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"ContactForm_formStyle__2BGHu\"};","export const SET_CONTACTS = \"SET_CONTACTS\";\nexport const SET_FILTER = \"SET_FILTER\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\n","import {\n  SET_CONTACTS,\n  SET_FILTER,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n} from \"./constantsType\";\n\nexport const setContacts = (value) => ({\n  type: SET_CONTACTS,\n  value,\n});\n\nexport const addContact = (name, number) => ({\n  type: ADD_CONTACT,\n  name,\n  number,\n});\n\nexport const deleteContact = (id) => ({\n  type: DELETE_CONTACT,\n  id,\n});\n\nexport const setFilter = (value) => ({\n  type: SET_FILTER,\n  value,\n});\n","import s from \"./ContactForm.module.css\";\r\nimport React, { useState } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/appActions\";\r\n\r\nfunction ContactForm({ addContact }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(null);\r\n\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onChangeNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        addContact(name, number);\r\n      }}\r\n      className={s.formStyle}\r\n    >\r\n      <p>Name</p>\r\n      <input\r\n        onChange={onChangeName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n      />\r\n      <p>Phone</p>\r\n      <input\r\n        onChange={onChangeNumber}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Add Contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default connect(() => {}, { addContact })(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/appActions\";\r\n\r\nconst ContactsList = ({ filter, contacts, deleteContact }) => {\r\n  const contactsList = contacts.filter((item) => {\r\n    return item.name.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n\r\n  return (\r\n    <ul>\r\n      {contactsList.map((el) => {\r\n        return (\r\n          <li key={el.id}>\r\n            {el.name + \":\" + el.number}{\" \"}\r\n            <button\r\n              onClick={(event) => {\r\n                deleteContact(event.target.id);\r\n              }}\r\n              id={el.id}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default connect(({ contacts, filter }) => ({ contacts, filter }), {\r\n  deleteContact,\r\n})(ContactsList);\r\n\r\nContactsList.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  filter: PropTypes.array,\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/appActions\";\r\n\r\nconst Filter = ({ setFilter }) => {\r\n  return (\r\n    <div>\r\n      <p>Find Contacts by Name</p>\r\n      <input\r\n        onChange={(e) => setFilter(e.target.value)}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ filter }) => ({\r\n  filter,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setFilter })(Filter);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactForm from \"./component/ContactForm\";\r\nimport ContactsList from \"./component/ContactsList\";\r\nimport Filter from \"./component/Filter\";\r\nimport { nanoid } from \"nanoid\";\r\nimport * as storage from \"./component/services/localStorage\";\r\nimport { setContacts, setFilter } from \"./redux/appActions\";\r\n\r\nconst STORAGE_KEY = \"contacts\";\r\n\r\nfunction App({ setFilter }) {\r\n  // const handleFilterChange = (e) => {\r\n  //   setFilter(e.target.value);\r\n  // };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = ({ filter, contacts }) => ({\r\n  filter,\r\n  contacts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setContacts, setFilter })(App);\r\n","import { combineReducers } from \"redux\";\nimport { load } from \"redux-localstorage-simple\";\nimport {\n  SET_CONTACTS,\n  SET_FILTER,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n} from \"./constantsType\";\nimport { nanoid } from \"nanoid\";\n\nlet LOCAL_CONTACTS = load({ states: [\"contacts\"], namespace: \"app-data\" });\n\nconst DEFAULT_CONTACTS = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nif (\n  !LOCAL_CONTACTS ||\n  !LOCAL_CONTACTS.contacts ||\n  !LOCAL_CONTACTS.contacts.length\n) {\n  LOCAL_CONTACTS.contacts = DEFAULT_CONTACTS;\n}\n\nconst contacts = (\n  state = LOCAL_CONTACTS.contacts,\n  { type, value, name, number, id }\n) => {\n  switch (type) {\n    case SET_CONTACTS:\n      return value;\n\n    case ADD_CONTACT:\n      const isIncluded = state.some((el) => el.name === name);\n      if (isIncluded) {\n        alert(\"This name already exist in your contacts!\");\n        return state;\n      }\n      return [\n        ...state,\n        {\n          name: name,\n          number: number,\n          id: nanoid(),\n        },\n      ];\n\n    case DELETE_CONTACT:\n      return state.filter((el) => el.id !== id);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = \"\", { type, value }) => {\n  switch (type) {\n    case SET_FILTER:\n      return value;\n\n    default:\n      return state;\n  }\n};\nexport default combineReducers({ contacts, filter });\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport appReducer from \"./appReducer\";\nimport { save } from \"redux-localstorage-simple\";\n\nconst store = createStore(\n  appReducer,\n  composeWithDevTools(\n    applyMiddleware(\n      thunk,\n      save({ states: [\"contacts\"], namespace: \"app-data\" })\n    )\n  )\n);\n\nexport default store;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nconsole.log(store.getState());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}