{"version":3,"sources":["component/AppBarEl/AppBarEl.jsx","component/PrivateRoute/PrivateRoute.jsx","component/Container/Container.jsx","component/PublicRoute/PublicRoute.jsx","App.jsx","redux/appReducer.js","redux/authSlice.js","redux/store.js","index.js","redux/authOperations.js","redux/contactsOperations.js","redux/appActions.js","redux/constantsType.js"],"names":["AppBarEl","React","useState","isLoggedIn","useSelector","state","authReducer","dispatch","useDispatch","name","user","email","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Box","style","alignItems","sx","flexGrow","display","xs","md","Typography","variant","component","activeStyle","color","to","exact","Button","height","size","onClick","e","operations","logOut","Tooltip","IconButton","Avatar","alt","src","PrivateRoute","children","redirectTo","routeProps","console","log","Item","styled","Paper","theme","typography","body2","textAlign","palette","text","secondary","lineHeight","lightTheme","createTheme","mode","Grid","container","spacing","map","index","item","ThemeProvider","p","bgcolor","gridTemplateColumns","width","gap","PublicRoute","restricted","shouldRedirect","ContactsView","lazy","HomeView","RegisterView","LoginView","App","isFetchingUser","useEffect","fetchUser","marginTop","marginLeft","marginRight","Skeleton","animation","className","fallback","path","contacts","createReducer","fetchContactsListOperation","fulfilled","_","action","payload","addContactOperation","deleteContactsOperation","error","rejected","pending","filter","Filter","combineReducers","authSlice","createSlice","initialState","token","extraReducers","register","logIn","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","appReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","a","rejectWithValue","post","data","thunkAPI","getState","tokenFromStorage","get","fetchContacts","fetchAddContacts","contact","fetchDeleteContact","id","delete","number","newContacts","createAction"],"mappings":"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","file":"static/js/main.0da62952.chunk.js","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import Navigation from \"../Navigation/Navigation\";\n// import UserMenu from \"../UserMenu/UserMenu\";\n// import AuthNav from \"../AuthNav/AuthNav\";\nimport { NavLink } from \"react-router-dom\";\nimport operations from \"../../redux/authOperations\";\n\n//STYLES++++++++++++++++++++++++++\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nconst AppBarEl = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const isLoggedIn = useSelector((state) => state.authReducer.isLoggedIn);\n  const dispatch = useDispatch();\n  const name = useSelector((state) => state.authReducer.user.name);\n  const email = useSelector((state) => state.authReducer.user.email);\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Box\n            style={{ alignItems: \"center\" }}\n            sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}\n          >\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              <NavLink\n                activeStyle={{ color: \"white\" }}\n                style={{ color: \"#00CED1\" }}\n                to=\"/\"\n                exact\n              >\n                Главная\n              </NavLink>\n            </Typography>\n\n            {isLoggedIn ? (\n              <>\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                  <NavLink\n                    activeStyle={{ color: \"white\" }}\n                    style={{ color: \"#00CED1\" }}\n                    to=\"/contacts\"\n                  >\n                    Contacts\n                  </NavLink>\n                </Typography>\n                <div style={{ display: \"flex\" }}>\n                  <Typography variant=\"h8\" component=\"div\" sx={{ flexGrow: 1 }}>\n                    <span>\n                      Добро пожаловать, {name} {email}\n                    </span>\n                  </Typography>\n                  <Button\n                    style={{ height: \"100\" }}\n                    color=\"error\"\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={(e) => {\n                      dispatch(operations.logOut());\n                    }}\n                  >\n                    Выйти\n                  </Button>\n                </div>\n              </>\n            ) : (\n              <>\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                  <NavLink\n                    activeStyle={{ color: \"white\" }}\n                    style={{ color: \"#00CED1\" }}\n                    to=\"/register\"\n                    exact\n                  >\n                    Регистрация\n                  </NavLink>\n                </Typography>\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                  <NavLink\n                    activeStyle={{ color: \"white\" }}\n                    style={{ color: \"#00CED1\" }}\n                    to=\"/login\"\n                    exact\n                  >\n                    Логин\n                  </NavLink>\n                </Typography>\n              </>\n            )}\n          </Box>\n\n          {isLoggedIn && (\n            <Box sx={{ flexGrow: 0 }}>\n              <Tooltip>\n                <IconButton>\n                  <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n                </IconButton>\n              </Tooltip>\n            </Box>\n          )}\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default AppBarEl;\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n/**\n * 1. Он должен повторять API Route\n *  2. Он должен рендерить Route\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на redirectTo\n */\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector((state) => state.authReducer.isLoggedIn);\n  console.log(isLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { createTheme, ThemeProvider, styled } from \"@mui/material/styles\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n  height: 1200,\n  lineHeight: \"60px\",\n}));\n\n// const darkTheme = createTheme({ palette: { mode: \"dark\" } });\nconst lightTheme = createTheme({ palette: { mode: \"light\" } });\n\nexport default function Container({ children }) {\n  return (\n    <Grid container spacing={9}>\n      {[lightTheme].map((theme, index) => (\n        <Grid item xs={6} key={index}>\n          <ThemeProvider theme={theme}>\n            <Box\n              sx={{\n                p: 2,\n                bgcolor: \"background.default\",\n                display: \"grid\",\n                gridTemplateColumns: { md: \"1fr 1fr\" },\n                width: 800,\n                height: 1200,\n                gap: 2,\n              }}\n            >\n              <Item>{children}</Item>\n            </Box>\n          </ThemeProvider>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n/**\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\n * - В противном случае рендерит компонент\n *\n */\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector((state) => state.authReducer.isLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import { Suspense, lazy, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport AppBarEl from \"./component/AppBarEl/AppBarEl\";\r\nimport PrivateRoute from \"./component/PrivateRoute/PrivateRoute\";\r\nimport Container from \"./component/Container/Container\";\r\nimport PublicRoute from \"./component/PublicRoute/PublicRoute\";\r\nimport operations from \"./redux/authOperations\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\n\r\nconst ContactsView = lazy(() => import(\"./views/ContactsView\"));\r\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\r\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\r\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingUser = useSelector(\r\n    (state) => state.authReducer.isFetchingUser\r\n  );\r\n  console.log(isFetchingUser);\r\n\r\n  useEffect(() => {\r\n    dispatch(operations.fetchUser());\r\n  }, [dispatch]);\r\n  return (\r\n    <Container>\r\n      {isFetchingUser ? (\r\n        <Box\r\n          sx={{\r\n            marginTop: 200,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            width: 500,\r\n          }}\r\n        >\r\n          <Skeleton />\r\n          <Skeleton animation=\"wave\" />\r\n          <Skeleton animation={false} />\r\n        </Box>\r\n      ) : (\r\n        // <h1>Показываем React Skeleton</h1>\r\n        <div className=\"container\">\r\n          <AppBarEl />\r\n          <Switch>\r\n            <Suspense\r\n              fallback={\r\n                <Box\r\n                  sx={{\r\n                    marginTop: 200,\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    width: 500,\r\n                  }}\r\n                >\r\n                  <Skeleton />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation={false} />\r\n                </Box>\r\n              }\r\n            >\r\n              <PublicRoute exact path=\"/\">\r\n                <HomeView />\r\n              </PublicRoute>\r\n              <PublicRoute path=\"/register\" restricted>\r\n                <RegisterView />\r\n              </PublicRoute>\r\n              <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\r\n                <LoginView />\r\n              </PublicRoute>\r\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n                <ContactsView />\r\n              </PrivateRoute>\r\n            </Suspense>\r\n          </Switch>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport Filter from './appActions';\n\nimport {\n  fetchContactsListOperation,\n  deleteContactsOperation,\n  addContactOperation,\n} from './contactsOperations';\n\nconst contacts = createReducer([], {\n  [fetchContactsListOperation.fulfilled]: (_, action) => action.payload,\n  [addContactOperation.fulfilled]: (state, action) => [\n    ...state,\n    action.payload,\n  ],\n  [deleteContactsOperation.fulfilled]: (_, action) => action.payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsListOperation.rejected]: (_, action) => action.payload,\n  [fetchContactsListOperation.pending]: () => null,\n  [addContactOperation.rejected]: (_, action) => action.payload,\n  [addContactOperation.pending]: () => null,\n  [deleteContactsOperation.pending]: () => null,\n  [deleteContactsOperation.rejected]: (_, action) => action.payload,\n});\n\nconst filter = createReducer('', {\n  [Filter]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  error,\n  filter,\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport operations from \"./authOperations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingUser: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [operations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [operations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [operations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [operations.fetchUser.pending](state) {\n      state.isFetchingUser = true;\n    },\n    [operations.fetchUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingUser = false;\n    },\n    [operations.fetchUser.rejected](state) {\n      state.isFetchingUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","// const store = configureStore({\n//   reducer: {\n//     authReducer,\n//     contacts: appReducer,\n//   },\n// });\n\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport appReducer from \"./appReducer\";\nimport authReducer from \"./authSlice\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    authReducer: persistReducer(authPersistConfig, authReducer),\n    contacts: appReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store, persistor } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\n  \"auth/register\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/users/signup\", credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nconst logIn = createAsyncThunk(\n  \"auth/login\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/users/login\", credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nconst logOut = createAsyncThunk(\"auth/logout\", async (_, thunkAPI) => {\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n  } catch (error) {\n    return thunkAPI.rejectWithValue();\n  }\n});\n\nconst fetchUser = createAsyncThunk(\"auth/refresh\", async (_, thunkAPI) => {\n  const state = thunkAPI.getState();\n  const tokenFromStorage = state.authReducer.token;\n\n  if (tokenFromStorage === null) {\n    console.log(\"Токена нет, уходим из fetchCurrentUser\");\n    return thunkAPI.rejectWithValue();\n  }\n\n  token.set(tokenFromStorage);\n  try {\n    const { data } = await axios.get(\"/users/current\");\n    return data;\n  } catch (error) {\n    thunkAPI.rejectWithValue();\n  }\n});\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchUser,\n};\nexport default operations;\n","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// Fetch requests\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(\"/contacts\");\r\n  return data;\r\n}\r\n\r\nexport async function fetchAddContacts(contact) {\r\n  const { data } = await axios.post(\"/contacts\", contact);\r\n  return data;\r\n}\r\n\r\nexport async function fetchDeleteContact(id) {\r\n  const { data } = await axios.delete(`/contacts/${id}`);\r\n  return data;\r\n}\r\n\r\n// ++++++++++++++++++++++++++++++++++++++++\r\n\r\nexport const addContactOperation = createAsyncThunk(\r\n  \"contacts/addContact\",\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n    try {\r\n      const contacts = await fetchAddContacts(contact);\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchContactsListOperation = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async () => {\r\n    const contacts = await fetchContacts();\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport const deleteContactsOperation = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (id) => {\r\n    const contacts = await fetchDeleteContact(id);\r\n    const newContacts = await fetchContacts();\r\n    return newContacts;\r\n  }\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { FILTER } from \"./constantsType\";\n\nconst Filter = createAction(FILTER);\nexport default Filter;\n","export const FILTER = \"contacts/filter\";\n"],"sourceRoot":""}