{"version":3,"sources":["component/ContactForm/ContactForm.jsx","component/ContactsList/ContactsList.jsx","component/Filter/Filter.jsx","App.jsx","component/services/localStorage.js","index.js","component/ContactForm/ContactForm.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","e","className","s","formStyle","onChange","target","value","type","pattern","title","required","ContactsList","filter","onClick","map","el","id","Filter","STORAGE_KEY","test","App","key","JSON","parse","localStorage","getItem","error","storage","contacts","setContacts","setFilter","useEffect","setItem","stringify","length","preventDefault","some","alert","prevState","nanoid","item","toLowerCase","includes","ev","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"8PAIe,SAASA,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KAUA,OACE,uBACEL,SAAU,SAAAM,GACRN,EAASM,EAAGJ,EAAME,IAEpBG,UAAWC,IAAEC,UAJf,UAME,qCACA,uBACEC,SAjBe,SAAAJ,GACnBH,EAAQG,EAAEK,OAAOC,QAiBbC,KAAK,OACLX,KAAK,OACLY,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,IAEV,sCACA,uBACEN,SAtBiB,SAAAJ,GACrBD,EAAUC,EAAEK,OAAOC,QAsBfC,KAAK,MACLX,KAAK,SACLY,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,IAEV,wBAAQH,KAAK,SAAb,4BCvCN,IAiBeI,EAjBM,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,6BACGD,EAAOE,KAAI,SAAAC,GACV,OACE,+BACGA,EAAGnB,KAAO,IAAMmB,EAAGjB,OAAQ,IAC5B,wBAAQe,QAASA,EAASG,GAAID,EAAGC,GAAIT,KAAK,SAA1C,sBAFOQ,EAAGC,UCQPC,EAfA,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAChB,OACE,gCACE,sDACA,uBACEA,SAAUA,EACVG,KAAK,OACLX,KAAK,SACLY,QAAQ,yHACRC,MAAM,+I,OCFRS,EAAc,WACdC,EAAO,CACX,CAAEH,GAAI,OAAQpB,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEkB,GAAI,OAAQpB,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEkB,GAAI,OAAQpB,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEkB,GAAI,OAAQpB,KAAM,iBAAkBE,OAAQ,cAGjC,SAASsB,IACtB,MAAgCzB,mBCRtB,SAAA0B,GACV,IACE,OAAOC,KAAKC,MAAMC,aAAaC,QAAQJ,IACvC,MAAOK,GACP,OAAO,MDIgCC,CAAYT,IAAgBC,GAArE,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAA4BlC,mBAAS,IAArC,mBAAOiB,EAAP,KAAekB,EAAf,KAmBAC,qBAAU,YCpCC,SAACV,EAAKf,GACjB,IACEkB,aAAaQ,QAAQX,EAAKC,KAAKW,UAAU3B,IACzC,MAAOoB,GACP,OAAO,MDiCPC,CAAaT,EAAaU,EAASM,OAASN,EAAW,QACtD,CAACA,IAgBJ,OACE,sBAAK3B,UAAU,YAAf,UACE,2CACA,cAACR,EAAD,CAAaC,SAtCE,SAACM,EAAGJ,EAAME,GAC3BE,EAAEmC,iBACiBP,EAASQ,MAAK,SAAArB,GAAE,OAAIA,EAAGnB,OAASA,KAEjDyC,MAAM,6CAGRR,GAAY,SAAAS,GAAS,4BAChBA,GADgB,CAEnB,CACE1C,KAAMA,EACNE,OAAQA,EACRkB,GAAIuB,uBA2BN,0CACA,cAAC,EAAD,CAAQnC,SAnBe,SAAAJ,GACzB8B,EAAU9B,EAAEK,OAAOC,UAmBjB,cAAC,EAAD,CAAcM,OAfTgB,EAAShB,QAAO,SAAA4B,GACrB,OAAOA,EAAK5C,KAAK6C,cAAcC,SAAS9B,EAAO6B,kBAcJ5B,QAV9B,SAAA8B,GACfd,EAAYD,EAAShB,QAAO,SAAAG,GAAE,OAAIA,EAAGC,KAAO2B,EAAGtC,OAAOW,aE9C1D4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1B,EAAD,MAEF2B,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,kC","file":"static/js/main.8ffc1ef0.chunk.js","sourcesContent":["import s from './ContactForm.module.css';\r\nimport React, { useState } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState(null);\r\n\r\n  const onChangeName = e => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onChangeNumber = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        onSubmit(e, name, number);\r\n      }}\r\n      className={s.formStyle}\r\n    >\r\n      <p>Name</p>\r\n      <input\r\n        onChange={onChangeName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n      />\r\n      <p>Phone</p>\r\n      <input\r\n        onChange={onChangeNumber}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Add Contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ContactsList = ({ filter, onClick }) => {\r\n  return (\r\n    <ul>\r\n      {filter.map(el => {\r\n        return (\r\n          <li key={el.id}>\r\n            {el.name + ':' + el.number}{' '}\r\n            <button onClick={onClick} id={el.id} type=\"button\">\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  filter: PropTypes.array,\r\n};\r\n","const Filter = ({ onChange }) => {\r\n  return (\r\n    <div>\r\n      <p>Find Contacts by Name</p>\r\n      <input\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ContactForm from './component/ContactForm';\r\nimport ContactsList from './component/ContactsList';\r\nimport Filter from './component/Filter';\r\nimport { nanoid } from 'nanoid';\r\nimport * as storage from './component/services/localStorage';\r\n\r\nconst STORAGE_KEY = 'contacts';\r\nconst test = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(storage.get(STORAGE_KEY) || test);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const addContact = (e, name, number) => {\r\n    e.preventDefault();\r\n    const isIncluded = contacts.some(el => el.name === name);\r\n    if (isIncluded) {\r\n      alert('This name already exist in your contacts!');\r\n      return;\r\n    }\r\n    setContacts(prevState => [\r\n      ...prevState,\r\n      {\r\n        name: name,\r\n        number: number,\r\n        id: nanoid(),\r\n      },\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    storage.save(STORAGE_KEY, contacts.length ? contacts : null);\r\n  }, [contacts]);\r\n\r\n  const handleFilterChange = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const getFilterContacts = () => {\r\n    return contacts.filter(item => {\r\n      return item.name.toLowerCase().includes(filter.toLowerCase());\r\n    });\r\n  };\r\n\r\n  const onDelete = ev => {\r\n    setContacts(contacts.filter(el => el.id !== ev.target.id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={addContact} />\r\n      <h2>Contacts</h2>\r\n      <Filter onChange={handleFilterChange} />\r\n      <ContactsList filter={getFilterContacts()} onClick={onDelete} />\r\n    </div>\r\n  );\r\n}\r\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = key => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"ContactForm_formStyle__2BGHu\"};"],"sourceRoot":""}