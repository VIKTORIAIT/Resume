{"version":3,"sources":["component/ContactForm/ContactForm.module.css","redux/constantsType.js","redux/appActions.js","component/ContactForm/ContactForm.jsx","component/ContactsList/ContactsList.jsx","component/Filter/Filter.jsx","App.jsx","redux/appReducer.js","redux/store.js","index.js"],"names":["module","exports","SET_FILTER","ADD_CONTACT","DELETE_CONTACT","setFilter","createAction","deleteContact","addContact","name","number","payload","id","nanoid","ContactForm","dispatch","useDispatch","useState","setName","setNumber","onSubmit","e","preventDefault","actions","className","s","formStyle","onChange","target","value","type","pattern","title","required","ContactsList","filter","useSelector","state","contacts","contactsList","item","toLowerCase","includes","map","el","onClick","event","Filter","App","createReducer","isIncluded","some","console","log","alert","combineReducers","contactsPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","appReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.21b75b42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"ContactForm_formStyle__2BGHu\"};","export const SET_FILTER = \"SET_FILTER\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { nanoid } from \"nanoid\";\n\nimport { SET_FILTER, ADD_CONTACT, DELETE_CONTACT } from \"./constantsType\";\n\nexport const setFilter = createAction(SET_FILTER);\nexport const deleteContact = createAction(DELETE_CONTACT);\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\n  payload: { name, number, id: nanoid() },\n}));\n","import s from './ContactForm.module.css';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../../redux/appActions';\r\n\r\nfunction ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState(null);\r\n\r\n  const onChangeName = e => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onChangeNumber = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        dispatch(actions.addContact(name, number));\r\n      }}\r\n      className={s.formStyle}\r\n    >\r\n      <p>Name</p>\r\n      <input\r\n        onChange={onChangeName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n      />\r\n      <p>Phone</p>\r\n      <input\r\n        onChange={onChangeNumber}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Add Contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import * as actions from \"../../redux/appActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst ContactsList = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector((state) => state.contacts.filter);\r\n  const contacts = useSelector((state) => {\r\n    return state.contacts.contacts;\r\n  });\r\n  const contactsList = contacts.filter((item) => {\r\n    return item.name.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n  return (\r\n    <ul>\r\n      {contactsList.map((el) => {\r\n        return (\r\n          <li key={el.id}>\r\n            {el.name + \":\" + el.number}{\" \"}\r\n            <button\r\n              onClick={(event) => {\r\n                dispatch(actions.deleteContact(event.target.id));\r\n              }}\r\n              id={el.id}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import * as actions from '../../redux/appActions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <p>Find Contacts by Name</p>\r\n      <input\r\n        onChange={e => dispatch(actions.setFilter(e.target.value))}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import ContactForm from \"./component/ContactForm\";\r\nimport ContactsList from \"./component/ContactsList\";\r\nimport Filter from \"./component/Filter\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport { SET_FILTER, ADD_CONTACT, DELETE_CONTACT } from \"./constantsType\";\n\nconst contacts = createReducer([], {\n  [ADD_CONTACT]: (state, { payload }) => {\n    const isIncluded = state.some((el) => el.name === payload.name);\n    console.log(isIncluded);\n    if (isIncluded) {\n      alert(\"This name already exist in your contacts!\");\n      return state;\n    }\n    return [...state, payload];\n  },\n  [DELETE_CONTACT]: (state, { payload }) =>\n    state.filter((el) => el.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [SET_FILTER]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { logger } from \"redux-logger/src\";\n\nimport appReducer from \"./appReducer\";\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  whitelist: [\"contacts\"],\n};\n\nconst store = configureStore({\n  reducer: { contacts: persistReducer(contactsPersistConfig, appReducer) },\n  devTools: process.env.NODE_ENV === \"development\",\n  middleware: [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n    logger,\n  ],\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}