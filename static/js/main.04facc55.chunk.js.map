{"version":3,"sources":["component/ContactForm/ContactForm.module.css","redux/appService.js","redux/contactsOperations.js","component/ContactForm/ContactForm.jsx","component/ContactsList/ContactsList.jsx","redux/appActions.js","redux/constantsType.js","component/Filter/Filter.jsx","App.jsx","redux/appReducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContacts","a","axios","get","data","fetchAddContacts","contact","post","fetchDeleteContact","id","delete","defaults","baseURL","addContactOperation","createAsyncThunk","name","number","rejectWithValue","contacts","fetchContactsListOperation","deleteContactsOperation","ContactForm","dispatch","useDispatch","useState","setName","setNumber","useSelector","onSubmit","e","preventDefault","some","el","alert","className","s","formStyle","onChange","target","value","type","pattern","title","required","ContactsList","filter","state","contactsList","item","toLowerCase","includes","useEffect","map","onClick","event","console","log","Filter","createAction","FilterEl","App","createReducer","fulfilled","_","action","payload","error","rejected","pending","combineReducers","store","configureStore","reducer","appReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04facc55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"ContactForm_formStyle__2BGHu\"};","import axios from \"axios\";\n\naxios.defaults.baseURL =\n  \"https://61bf372fb25c3a00173f4d21.mockapi.io/api/contacts\";\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(\"/contacts\");\n  return data;\n}\n\nexport async function fetchAddContacts(contact) {\n  const { data } = await axios.post(\"/contacts\", contact);\n  return data;\n}\n\nexport async function fetchDeleteContact(id) {\n  const { data } = await axios.delete(`/contacts/${id}`);\n  return data;\n}\n","import {\n  fetchContacts,\n  fetchAddContacts,\n  fetchDeleteContact,\n} from \"./appService\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const addContactOperation = createAsyncThunk(\n  \"contacts/addContact\",\n  async ({ name, number }, { rejectWithValue }) => {\n    const contact = {\n      name,\n      number,\n    };\n    try {\n      const contacts = await fetchAddContacts(contact);\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const fetchContactsListOperation = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async () => {\n    const contacts = await fetchContacts();\n    return contacts;\n  }\n);\n\nexport const deleteContactsOperation = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (id) => {\n    const contacts = await fetchDeleteContact(id);\n    return contacts;\n  }\n);\n","import s from \"./ContactForm.module.css\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addContactOperation } from \"../../redux/contactsOperations\";\r\n\r\nfunction ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(null);\r\n  const contacts = useSelector((data) => data.contacts.contacts);\r\n\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onChangeNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        const isIncluded = contacts.some((el) => el.name === name);\r\n\r\n        if (isIncluded) {\r\n          alert(\"This name already exist in your contacts!\");\r\n          return;\r\n        }\r\n        dispatch(addContactOperation({ name, number }));\r\n      }}\r\n      className={s.formStyle}\r\n    >\r\n      <p>Name</p>\r\n      <input\r\n        onChange={onChangeName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n      />\r\n      <p>Phone</p>\r\n      <input\r\n        onChange={onChangeNumber}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Add Contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchContactsListOperation,\r\n  deleteContactsOperation,\r\n} from \"../../redux/contactsOperations\";\r\n\r\nconst ContactsList = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector((state) => state.contacts.filter);\r\n  const contacts = useSelector((state) => {\r\n    return state.contacts.contacts;\r\n  });\r\n\r\n  const contactsList = contacts.filter((item) => {\r\n    return item.name.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n  fetchContactsListOperation();\r\n  useEffect(() => dispatch(fetchContactsListOperation()), [dispatch]);\r\n  return (\r\n    <ul>\r\n      {contactsList.map((el) => {\r\n        return (\r\n          <li key={el.id}>\r\n            {el.name + \":\" + el.number}{\" \"}\r\n            <button\r\n              onClick={(event) => {\r\n                console.log();\r\n                dispatch(deleteContactsOperation(event.target.id));\r\n              }}\r\n              id={el.id}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { FILTER } from \"./constantsType\";\n\nconst Filter = createAction(FILTER);\nexport default Filter;\n","export const FILTER = \"contacts/filter\";\n","import Filter from \"../../redux/appActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst FilterEl = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <p>Find Contacts by Name</p>\r\n      <input\r\n        onChange={(e) => dispatch(Filter(e.target.value))}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterEl;\r\n","import ContactForm from \"./component/ContactForm\";\r\nimport ContactsList from \"./component/ContactsList\";\r\nimport Filter from \"./component/Filter\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport Filter from \"./appActions\";\nimport {\n  fetchContactsListOperation,\n  deleteContactsOperation,\n  addContactOperation,\n} from \"./contactsOperations\";\n\nconst contacts = createReducer([], {\n  [fetchContactsListOperation.fulfilled]: (_, action) => action.payload,\n  [addContactOperation.fulfilled]: (state, action) => [\n    ...state,\n    action.payload,\n  ],\n  [deleteContactsOperation.fulfilled]: (state, action) => {\n    return state.filter((el) => el.id !== action.payload.id);\n  },\n});\n\nconst error = createReducer(null, {\n  [fetchContactsListOperation.rejected]: (_, action) => action.payload,\n  [fetchContactsListOperation.pending]: () => null,\n  [addContactOperation.rejected]: (_, action) => action.payload,\n  [addContactOperation.pending]: () => null,\n  [deleteContactsOperation.pending]: () => null,\n  [deleteContactsOperation.rejected]: (_, action) => action.payload,\n});\n\nconst filter = createReducer(\"\", {\n  [Filter]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  error,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from './appReducer';\nconst store = configureStore({\n  reducer: {\n    contacts: appReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}