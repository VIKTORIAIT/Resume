(this["webpackJsonpgoit-react-hw-01-components"]=this["webpackJsonpgoit-react-hw-01-components"]||[]).push([[0],{15:function(e,t,n){e.exports={formStyle:"ContactForm_formStyle__2BGHu"}},31:function(e,t,n){},36:function(e,t,n){"use strict";n.r(t);var c=n(0),a=n.n(c),r=n(8),o=n.n(r),s=n(3),i=(n(31),n(13)),b=n(15),j=n.n(b),u=n(4),d=n(20),l="SET_FILTER",O="ADD_CONTACT",h="DELETE_CONTACT",m=Object(u.b)(l),p=Object(u.b)(h),f=Object(u.b)(O,(function(e,t){return{payload:{name:e,number:t,id:Object(d.a)()}}})),x=n(1);var y=function(){var e=Object(s.b)(),t=Object(c.useState)(""),n=Object(i.a)(t,2),a=n[0],r=n[1],o=Object(c.useState)(null),b=Object(i.a)(o,2),u=b[0],d=b[1];return Object(x.jsxs)("form",{onSubmit:function(t){t.preventDefault(),e(f(a,u))},className:j.a.formStyle,children:[Object(x.jsx)("p",{children:"Name"}),Object(x.jsx)("input",{onChange:function(e){r(e.target.value)},type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0}),Object(x.jsx)("p",{children:"Phone"}),Object(x.jsx)("input",{onChange:function(e){d(e.target.value)},type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0}),Object(x.jsx)("button",{type:"submit",children:"Add Contact"})]})},C=function(){var e=Object(s.b)(),t=Object(s.c)((function(e){return e.contacts.filter})),n=Object(s.c)((function(e){return e.contacts.contacts})).filter((function(e){return e.name.toLowerCase().includes(t.toLowerCase())}));return Object(x.jsx)("ul",{children:n.map((function(t){return Object(x.jsxs)("li",{children:[t.name+":"+t.number," ",Object(x.jsx)("button",{onClick:function(t){e(p(t.target.id))},id:t.id,type:"button",children:"Delete"})]},t.id)}))})},g=function(){var e=Object(s.b)();return Object(x.jsxs)("div",{children:[Object(x.jsx)("p",{children:"Find Contacts by Name"}),Object(x.jsx)("input",{onChange:function(t){return e(m(t.target.value))},type:"text",name:"filter",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan"})]})};function v(){return Object(x.jsxs)("div",{className:"container",children:[Object(x.jsx)("h1",{children:"Phonebook"}),Object(x.jsx)(y,{}),Object(x.jsx)("h2",{children:"Contacts"}),Object(x.jsx)(g,{}),Object(x.jsx)(C,{})]})}var A,w=n(6),z=n(5),T=n(16),N=n.n(T),S=n(19),k=n(10),E=n(2),Z=Object(u.c)([],(A={},Object(k.a)(A,O,(function(e,t){var n=t.payload,c=e.some((function(e){return e.name===n.name}));return console.log(c),c?(alert("This name already exist in your contacts!"),e):[].concat(Object(w.a)(e),[n])})),Object(k.a)(A,h,(function(e,t){var n=t.payload;return e.filter((function(e){return e.id!==n}))})),A)),_=Object(u.c)("",Object(k.a)({},l,(function(e,t){return t.payload}))),D=Object(E.b)({contacts:Z,filter:_}),F={key:"contacts",storage:N.a,whitelist:["contacts"]},B=Object(u.a)({reducer:{contacts:Object(z.g)(F,D)},devTools:!1,middleware:[].concat(Object(w.a)(Object(u.d)({serializableCheck:{ignoredActions:[z.a,z.f,z.b,z.c,z.d,z.e]}})),[S.a])}),J={store:B,persistor:Object(z.h)(B)},L=n(18);o.a.render(Object(x.jsx)(a.a.StrictMode,{children:Object(x.jsx)(s.a,{store:J.store,children:Object(x.jsx)(L.a,{loading:null,persistor:J.persistor,children:Object(x.jsx)(v,{})})})}),document.getElementById("root"))}},[[36,1,2]]]);
//# sourceMappingURL=main.21b75b42.chunk.js.map